<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<bean id="abstractXADataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" abstract="true">
		<property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource" />
		<property name="poolSize" value="10" />
		<property name="minPoolSize" value="10" />
		<property name="maxPoolSize" value="30" />
		<property name="borrowConnectionTimeout" value="60" />
		<property name="reapTimeout" value="20" />
		<property name="maxIdleTime" value="60" />
		<property name="maintenanceInterval" value="60" />
		<property name="loginTimeout" value="60" />
		<property name="testQuery" value="select 1 from dual" />
	</bean>

	<bean id="masterDataSource" parent="abstractXADataSource">
		<property name="uniqueResourceName" value="master" />
		<property name="xaProperties">
			<props>
				<prop key="URL">${datasource.jdbcUrl}</prop>
				<prop key="user">${datasource.jdbcUserName}</prop>
				<prop key="password">${datasource.jdbcPassWord}</prop>
			</props>
		</property>
	</bean>

	<bean id="slaveDataSource" parent="abstractXADataSource">
		<property name="uniqueResourceName" value="slave" />
		<property name="xaProperties">
			<props>
				<prop key="URL">${datasource.jdbcUrl}</prop>
				<prop key="user">${datasource.jdbcUserName}</prop>
				<prop key="password">${datasource.jdbcPassWord}</prop>
			</props>
		</property>
	</bean>

	<!-- 读写分离动态数据源 -->
	<bean id="dynamicMulitDataSource" class="com.athena.common.datasource.DynamicMulitDataSource">
		<property name="readerSource" ref="slaveDataSource" />
		<property name="writerSource" ref="masterDataSource" />
	</bean>
	<bean id="dynamicMulitDataSourceAdvice" class="com.athena.common.datasource.DynamicMulitDataSourceAdvice" />
	<aop:config>
		<aop:pointcut
			expression="(execution(* *..*.dao.*Dao.insert*(..)) or
					   	 execution(* *..*.dao.*Dao.save*(..)) or
					  	 execution(* *..*.dao.*Dao.update*(..)) or
					  	 execution(* *..*.dao.*Dao.delete*(..)) or
					  	 execution(* *..*.dao.*Dao.remove*(..)) or
					  	 execution(* *..*.dao.*Dao.add*(..)))"
			id="writer_dao_method_pointcut" />
		<aop:aspect ref="dynamicMulitDataSourceAdvice" order="0">
			<aop:around method="writeDataSource" pointcut-ref="writer_dao_method_pointcut" />
		</aop:aspect>
	</aop:config>

	<!-- mybatis会话工厂 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicMulitDataSource" />
		<property name="mapperLocations">
			<util:list id="mapperLocationsPath">
				<value>classpath*:com/athena/module/**/sql/*.xml</value>
			</util:list>
		</property>
		<property name="configurationProperties">
			<props>
				<prop key="cacheEnabled">false</prop>
				<prop key="lazyLoadingEnabled">false</prop>
				<prop key="useGeneratedKeys">true</prop>
			</props>
		</property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactory" ref="sqlSessionFactoryBean" />
		<property name="basePackage">
			<value>com.athena.module.**.mapper</value>
		</property>
	</bean>

	<!-- 事务管理器 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>
	<bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
		<property name="allowCustomIsolationLevels" value="true" />
	</bean>

	<!-- 事务切入 -->
	<tx:advice id="transactionAdvice" transaction-manager="springTransactionManager">
		<tx:attributes>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="count*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="list*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* *..*.service.*Service.*(..))" id="pointcut_transcation" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="pointcut_transcation" order="1" />
	</aop:config>

</beans>