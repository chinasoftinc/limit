<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<bean id="readerSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.jdbcUrl}" />
		<property name="username" value="${datasource.jdbcUserName}" />
		<property name="password" value="${datasource.jdbcPassWord}" />
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="minIdle" value="${dbcp.minIdle}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
		<property name="defaultAutoCommit" value="false" />
	</bean>

	<bean id="writerSource" class="org.apache.taglibs.standard.tag.common.sql.DataSourceWrapper">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="jdbcURL" value="${datasource.jdbcUrl}"></property>
		<property name="userName" value="${datasource.jdbcUserName}" />
		<property name="password" value="${datasource.jdbcPassWord}" />
	</bean>

	<!-- 读写分离动态数据源 -->
	<bean id="dynamicMulitDataSource" class="com.athena.common.datasource.DynamicMulitDataSource">
		<property name="readerSource" ref="readerSource" />
		<property name="writerSource" ref="writerSource" />
	</bean>

	<!-- 读写分离数据源 aop, 方法级设置数据源 -->
	<bean id="dynamicMulitDataSourceAdvice" class="com.athena.common.datasource.DynamicMulitDataSourceAdvice" />
	<aop:config>
		<aop:pointcut
			expression="(execution(* *..*.dao.*Dao.insert*(..)) or
					   	 execution(* *..*.dao.*Dao.save*(..)) or
					  	 execution(* *..*.dao.*Dao.update*(..)) or
					  	 execution(* *..*.dao.*Dao.delete*(..)) or
					  	 execution(* *..*.dao.*Dao.remove*(..)) or
					  	 execution(* *..*.dao.*Dao.add*(..)))"
			id="writer_dao_method_pointcut" />
		<aop:aspect ref="dynamicMulitDataSourceAdvice" order="0">
			<aop:around method="writeDataSource" pointcut-ref="writer_dao_method_pointcut" />
		</aop:aspect>
	</aop:config>

	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicMulitDataSource" />
		<property name="mapperLocations">
			<util:list id="mapperLocationsPath">
				<value>classpath*:com/athena/module/**/sqlmap/*.xml</value>
			</util:list>
		</property>
		<property name="configurationProperties">
			<props>
				<prop key="cacheEnabled">false</prop>
				<prop key="lazyLoadingEnabled">false</prop>
				<prop key="useGeneratedKeys">true</prop>
			</props>
		</property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactory" ref="sqlSessionFactoryBean" />
		<property name="basePackage">
			<value>com.athena.module.**.mapper</value>
		</property>
	</bean>

	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicMulitDataSource" />
	</bean>
	<tx:advice id="transactionAdvice" transaction-manager="dataSourceTransactionManager">
		<tx:attributes>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="count*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="list*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* *..*.service.*Service.*(..))" id="pointcut_transcation" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="pointcut_transcation" order="1" />
	</aop:config>
</beans>