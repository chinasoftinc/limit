<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="apple.module.menu.mapper.MenuMapper">
	<resultMap id="BaseResultMap" type="apple.module.menu.model.Menu">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="menu_name" property="menuName" jdbcType="VARCHAR" />
		<result column="menu_url" property="menuUrl" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId" jdbcType="BIGINT" />
		<result column="privilege_code" property="privilegeCode" jdbcType="BIGINT" />
		<result column="privilege_pos" property="privilegePos" jdbcType="INTEGER" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="menu_order" property="menuOrder" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, menu_name, menu_url, parent_id, privilege_code, privilege_pos, description, menu_order
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="apple.module.menu.model.MenuExam">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from kernel_menu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="pagination != null">
			limit #{pagination.limitIndex} , #{pagination.pageSize}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from kernel_menu
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from kernel_menu
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="apple.module.menu.model.MenuExam">
		delete from kernel_menu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="apple.module.menu.model.Menu">
		insert into kernel_menu (id, menu_name, menu_url,
		parent_id, privilege_code, privilege_pos,
		description, menu_order)
		values (#{id,jdbcType=BIGINT}, #{menuName,jdbcType=VARCHAR}, #{menuUrl,jdbcType=VARCHAR},
		#{parentId,jdbcType=BIGINT}, #{privilegeCode,jdbcType=BIGINT}, #{privilegePos,jdbcType=INTEGER},
		#{description,jdbcType=VARCHAR}, #{menuOrder,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="apple.module.menu.model.Menu">
		insert into kernel_menu
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="menuName != null">
				menu_name,
			</if>
			<if test="menuUrl != null">
				menu_url,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="privilegeCode != null">
				privilege_code,
			</if>
			<if test="privilegePos != null">
				privilege_pos,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="menuOrder != null">
				menu_order,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="menuName != null">
				#{menuName,jdbcType=VARCHAR},
			</if>
			<if test="menuUrl != null">
				#{menuUrl,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=BIGINT},
			</if>
			<if test="privilegeCode != null">
				#{privilegeCode,jdbcType=BIGINT},
			</if>
			<if test="privilegePos != null">
				#{privilegePos,jdbcType=INTEGER},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="menuOrder != null">
				#{menuOrder,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="apple.module.menu.model.MenuExam" resultType="java.lang.Integer">
		select count(*) from kernel_menu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update kernel_menu
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.menuName != null">
				menu_name = #{record.menuName,jdbcType=VARCHAR},
			</if>
			<if test="record.menuUrl != null">
				menu_url = #{record.menuUrl,jdbcType=VARCHAR},
			</if>
			<if test="record.parentId != null">
				parent_id = #{record.parentId,jdbcType=BIGINT},
			</if>
			<if test="record.privilegeCode != null">
				privilege_code = #{record.privilegeCode,jdbcType=BIGINT},
			</if>
			<if test="record.privilegePos != null">
				privilege_pos = #{record.privilegePos,jdbcType=INTEGER},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
			</if>
			<if test="record.menuOrder != null">
				menu_order = #{record.menuOrder,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update kernel_menu
		set id = #{record.id,jdbcType=BIGINT},
		menu_name = #{record.menuName,jdbcType=VARCHAR},
		menu_url = #{record.menuUrl,jdbcType=VARCHAR},
		parent_id = #{record.parentId,jdbcType=BIGINT},
		privilege_code = #{record.privilegeCode,jdbcType=BIGINT},
		privilege_pos = #{record.privilegePos,jdbcType=INTEGER},
		description = #{record.description,jdbcType=VARCHAR},
		menu_order = #{record.menuOrder,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="apple.module.menu.model.Menu">
		update kernel_menu
		<set>
			<if test="menuName != null">
				menu_name = #{menuName,jdbcType=VARCHAR},
			</if>
			<if test="menuUrl != null">
				menu_url = #{menuUrl,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=BIGINT},
			</if>
			<if test="privilegeCode != null">
				privilege_code = #{privilegeCode,jdbcType=BIGINT},
			</if>
			<if test="privilegePos != null">
				privilege_pos = #{privilegePos,jdbcType=INTEGER},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="menuOrder != null">
				menu_order = #{menuOrder,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="apple.module.menu.model.Menu">
		update kernel_menu
		set menu_name = #{menuName,jdbcType=VARCHAR},
		menu_url = #{menuUrl,jdbcType=VARCHAR},
		parent_id = #{parentId,jdbcType=BIGINT},
		privilege_code = #{privilegeCode,jdbcType=BIGINT},
		privilege_pos = #{privilegePos,jdbcType=INTEGER},
		description = #{description,jdbcType=VARCHAR},
		menu_order = #{menuOrder,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<!-- 查询最大的权限位 -->
	<select id="selectMaxPrivilegePos" resultType="java.lang.Integer">
		SELECT MAX(PRIVILEGE_POS) FROM KERNEL_MENU;
	</select>

	<!-- 查询指定权限位中最大的权限码 -->
	<select id="selectMaxPrivilegeCode" resultType="java.lang.Long" parameterType="java.lang.Integer">
		SELECT MAX(PRIVILEGE_CODE) FROM KERNEL_MENU WHERE PRIVILEGE_POS=${privilegePos};
	</select>

	<!-- 查询最大的排序 -->
	<select id="selectMaxMenuOrder" resultType="java.lang.Integer">
		SELECT MAX(MENU_ORDER) FROM KERNEL_MENU;
	</select>

</mapper>