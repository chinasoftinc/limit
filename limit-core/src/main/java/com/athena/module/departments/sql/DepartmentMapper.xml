<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.athena.module.departments.mapper.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.athena.module.departments.model.Department">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="DEPT_CODE" jdbcType="VARCHAR" property="deptCode" />
    <result column="DEPT_SHORT_NAME" jdbcType="VARCHAR" property="deptShortName" />
    <result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
    <result column="DEPT_AREA_CODE" jdbcType="DECIMAL" property="deptAreaCode" />
    <result column="DEPT_DISTRICT_CODE" jdbcType="DECIMAL" property="deptDistrictCode" />
    <result column="DEPT_DESCRIPTION" jdbcType="VARCHAR" property="deptDescription" />
    <result column="DEPT_TYPE" jdbcType="CHAR" property="deptType" />
    <result column="DEPT_PARENT_ID" jdbcType="DECIMAL" property="deptParentId" />
    <result column="DEPT_SUB_COUNT" jdbcType="DECIMAL" property="deptSubCount" />
    <result column="DEPT_SORT_NO" jdbcType="DECIMAL" property="deptSortNo" />
    <result column="DEPT_DEEP" jdbcType="DECIMAL" property="deptDeep" />
    <result column="IS_DEL" jdbcType="CHAR" property="isDel" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_USERID" jdbcType="DECIMAL" property="createUserid" />
    <result column="UPDATE_USERID" jdbcType="DECIMAL" property="updateUserid" />
    <result column="VERSION_NO" jdbcType="DECIMAL" property="versionNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, DEPT_CODE, DEPT_SHORT_NAME, DEPT_NAME, DEPT_AREA_CODE, DEPT_DISTRICT_CODE, DEPT_DESCRIPTION, 
    DEPT_TYPE, DEPT_PARENT_ID, DEPT_SUB_COUNT, DEPT_SORT_NO, DEPT_DEEP, IS_DEL, CREATE_TIME, 
    UPDATE_TIME, CREATE_USERID, UPDATE_USERID, VERSION_NO
  </sql>
  <select id="selectByExample" parameterType="com.athena.module.departments.model.DepartmentExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_DEPARTMENTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_DEPARTMENTS
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from T_DEPARTMENTS
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.athena.module.departments.model.DepartmentExample">
    delete from T_DEPARTMENTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.athena.module.departments.model.Department">
    insert into T_DEPARTMENTS (ID, DEPT_CODE, DEPT_SHORT_NAME, 
      DEPT_NAME, DEPT_AREA_CODE, DEPT_DISTRICT_CODE, 
      DEPT_DESCRIPTION, DEPT_TYPE, DEPT_PARENT_ID, 
      DEPT_SUB_COUNT, DEPT_SORT_NO, DEPT_DEEP, 
      IS_DEL, CREATE_TIME, UPDATE_TIME, 
      CREATE_USERID, UPDATE_USERID, VERSION_NO
      )
    values (#{id,jdbcType=DECIMAL}, #{deptCode,jdbcType=VARCHAR}, #{deptShortName,jdbcType=VARCHAR}, 
      #{deptName,jdbcType=VARCHAR}, #{deptAreaCode,jdbcType=DECIMAL}, #{deptDistrictCode,jdbcType=DECIMAL}, 
      #{deptDescription,jdbcType=VARCHAR}, #{deptType,jdbcType=CHAR}, #{deptParentId,jdbcType=DECIMAL}, 
      #{deptSubCount,jdbcType=DECIMAL}, #{deptSortNo,jdbcType=DECIMAL}, #{deptDeep,jdbcType=DECIMAL}, 
      #{isDel,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUserid,jdbcType=DECIMAL}, #{updateUserid,jdbcType=DECIMAL}, #{versionNo,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.athena.module.departments.model.Department">
    insert into T_DEPARTMENTS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="deptCode != null">
        DEPT_CODE,
      </if>
      <if test="deptShortName != null">
        DEPT_SHORT_NAME,
      </if>
      <if test="deptName != null">
        DEPT_NAME,
      </if>
      <if test="deptAreaCode != null">
        DEPT_AREA_CODE,
      </if>
      <if test="deptDistrictCode != null">
        DEPT_DISTRICT_CODE,
      </if>
      <if test="deptDescription != null">
        DEPT_DESCRIPTION,
      </if>
      <if test="deptType != null">
        DEPT_TYPE,
      </if>
      <if test="deptParentId != null">
        DEPT_PARENT_ID,
      </if>
      <if test="deptSubCount != null">
        DEPT_SUB_COUNT,
      </if>
      <if test="deptSortNo != null">
        DEPT_SORT_NO,
      </if>
      <if test="deptDeep != null">
        DEPT_DEEP,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="createUserid != null">
        CREATE_USERID,
      </if>
      <if test="updateUserid != null">
        UPDATE_USERID,
      </if>
      <if test="versionNo != null">
        VERSION_NO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="deptCode != null">
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptShortName != null">
        #{deptShortName,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptAreaCode != null">
        #{deptAreaCode,jdbcType=DECIMAL},
      </if>
      <if test="deptDistrictCode != null">
        #{deptDistrictCode,jdbcType=DECIMAL},
      </if>
      <if test="deptDescription != null">
        #{deptDescription,jdbcType=VARCHAR},
      </if>
      <if test="deptType != null">
        #{deptType,jdbcType=CHAR},
      </if>
      <if test="deptParentId != null">
        #{deptParentId,jdbcType=DECIMAL},
      </if>
      <if test="deptSubCount != null">
        #{deptSubCount,jdbcType=DECIMAL},
      </if>
      <if test="deptSortNo != null">
        #{deptSortNo,jdbcType=DECIMAL},
      </if>
      <if test="deptDeep != null">
        #{deptDeep,jdbcType=DECIMAL},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        #{createUserid,jdbcType=DECIMAL},
      </if>
      <if test="updateUserid != null">
        #{updateUserid,jdbcType=DECIMAL},
      </if>
      <if test="versionNo != null">
        #{versionNo,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.athena.module.departments.model.DepartmentExample" resultType="java.lang.Integer">
    select count(*) from T_DEPARTMENTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_DEPARTMENTS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.deptCode != null">
        DEPT_CODE = #{record.deptCode,jdbcType=VARCHAR},
      </if>
      <if test="record.deptShortName != null">
        DEPT_SHORT_NAME = #{record.deptShortName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptName != null">
        DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptAreaCode != null">
        DEPT_AREA_CODE = #{record.deptAreaCode,jdbcType=DECIMAL},
      </if>
      <if test="record.deptDistrictCode != null">
        DEPT_DISTRICT_CODE = #{record.deptDistrictCode,jdbcType=DECIMAL},
      </if>
      <if test="record.deptDescription != null">
        DEPT_DESCRIPTION = #{record.deptDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.deptType != null">
        DEPT_TYPE = #{record.deptType,jdbcType=CHAR},
      </if>
      <if test="record.deptParentId != null">
        DEPT_PARENT_ID = #{record.deptParentId,jdbcType=DECIMAL},
      </if>
      <if test="record.deptSubCount != null">
        DEPT_SUB_COUNT = #{record.deptSubCount,jdbcType=DECIMAL},
      </if>
      <if test="record.deptSortNo != null">
        DEPT_SORT_NO = #{record.deptSortNo,jdbcType=DECIMAL},
      </if>
      <if test="record.deptDeep != null">
        DEPT_DEEP = #{record.deptDeep,jdbcType=DECIMAL},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserid != null">
        CREATE_USERID = #{record.createUserid,jdbcType=DECIMAL},
      </if>
      <if test="record.updateUserid != null">
        UPDATE_USERID = #{record.updateUserid,jdbcType=DECIMAL},
      </if>
      <if test="record.versionNo != null">
        VERSION_NO = #{record.versionNo,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_DEPARTMENTS
    set ID = #{record.id,jdbcType=DECIMAL},
      DEPT_CODE = #{record.deptCode,jdbcType=VARCHAR},
      DEPT_SHORT_NAME = #{record.deptShortName,jdbcType=VARCHAR},
      DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      DEPT_AREA_CODE = #{record.deptAreaCode,jdbcType=DECIMAL},
      DEPT_DISTRICT_CODE = #{record.deptDistrictCode,jdbcType=DECIMAL},
      DEPT_DESCRIPTION = #{record.deptDescription,jdbcType=VARCHAR},
      DEPT_TYPE = #{record.deptType,jdbcType=CHAR},
      DEPT_PARENT_ID = #{record.deptParentId,jdbcType=DECIMAL},
      DEPT_SUB_COUNT = #{record.deptSubCount,jdbcType=DECIMAL},
      DEPT_SORT_NO = #{record.deptSortNo,jdbcType=DECIMAL},
      DEPT_DEEP = #{record.deptDeep,jdbcType=DECIMAL},
      IS_DEL = #{record.isDel,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CREATE_USERID = #{record.createUserid,jdbcType=DECIMAL},
      UPDATE_USERID = #{record.updateUserid,jdbcType=DECIMAL},
      VERSION_NO = #{record.versionNo,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.athena.module.departments.model.Department">
    update T_DEPARTMENTS
    <set>
      <if test="deptCode != null">
        DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptShortName != null">
        DEPT_SHORT_NAME = #{deptShortName,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null">
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptAreaCode != null">
        DEPT_AREA_CODE = #{deptAreaCode,jdbcType=DECIMAL},
      </if>
      <if test="deptDistrictCode != null">
        DEPT_DISTRICT_CODE = #{deptDistrictCode,jdbcType=DECIMAL},
      </if>
      <if test="deptDescription != null">
        DEPT_DESCRIPTION = #{deptDescription,jdbcType=VARCHAR},
      </if>
      <if test="deptType != null">
        DEPT_TYPE = #{deptType,jdbcType=CHAR},
      </if>
      <if test="deptParentId != null">
        DEPT_PARENT_ID = #{deptParentId,jdbcType=DECIMAL},
      </if>
      <if test="deptSubCount != null">
        DEPT_SUB_COUNT = #{deptSubCount,jdbcType=DECIMAL},
      </if>
      <if test="deptSortNo != null">
        DEPT_SORT_NO = #{deptSortNo,jdbcType=DECIMAL},
      </if>
      <if test="deptDeep != null">
        DEPT_DEEP = #{deptDeep,jdbcType=DECIMAL},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        CREATE_USERID = #{createUserid,jdbcType=DECIMAL},
      </if>
      <if test="updateUserid != null">
        UPDATE_USERID = #{updateUserid,jdbcType=DECIMAL},
      </if>
      <if test="versionNo != null">
        VERSION_NO = #{versionNo,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.athena.module.departments.model.Department">
    update T_DEPARTMENTS
    set DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
      DEPT_SHORT_NAME = #{deptShortName,jdbcType=VARCHAR},
      DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      DEPT_AREA_CODE = #{deptAreaCode,jdbcType=DECIMAL},
      DEPT_DISTRICT_CODE = #{deptDistrictCode,jdbcType=DECIMAL},
      DEPT_DESCRIPTION = #{deptDescription,jdbcType=VARCHAR},
      DEPT_TYPE = #{deptType,jdbcType=CHAR},
      DEPT_PARENT_ID = #{deptParentId,jdbcType=DECIMAL},
      DEPT_SUB_COUNT = #{deptSubCount,jdbcType=DECIMAL},
      DEPT_SORT_NO = #{deptSortNo,jdbcType=DECIMAL},
      DEPT_DEEP = #{deptDeep,jdbcType=DECIMAL},
      IS_DEL = #{isDel,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_USERID = #{createUserid,jdbcType=DECIMAL},
      UPDATE_USERID = #{updateUserid,jdbcType=DECIMAL},
      VERSION_NO = #{versionNo,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="pagination != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="pagination != null">
      <![CDATA[ ) row_ ) where rownum_ > #{pagination.beginIndex} and rownum_ <= #{pagination.endIndex} ]]>
    </if>
  </sql>
</mapper>