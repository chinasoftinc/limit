<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.athena.module.roles.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.athena.module.roles.model.Role" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="ROLE_CODE" property="roleCode" jdbcType="VARCHAR" />
    <result column="ROLE_DESCRIPTION" property="roleDescription" jdbcType="VARCHAR" />
    <result column="IS_DEL" property="isDel" jdbcType="CHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="DATE" />
    <result column="CREATE_USERID" property="createUserid" jdbcType="DECIMAL" />
    <result column="UPDATE_USERID" property="updateUserid" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ROLE_NAME, ROLE_CODE, ROLE_DESCRIPTION, IS_DEL, CREATE_TIME, UPDATE_TIME, CREATE_USERID, 
    UPDATE_USERID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.athena.module.roles.model.RoleExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_ROLES
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from T_ROLES
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from T_ROLES
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.athena.module.roles.model.RoleExample" >
    delete from T_ROLES
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.athena.module.roles.model.Role" >
    insert into T_ROLES (ID, ROLE_NAME, ROLE_CODE, 
      ROLE_DESCRIPTION, IS_DEL, CREATE_TIME, 
      UPDATE_TIME, CREATE_USERID, UPDATE_USERID
      )
    values (#{id,jdbcType=DECIMAL}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, 
      #{roleDescription,jdbcType=VARCHAR}, #{isDel,jdbcType=CHAR}, #{createTime,jdbcType=DATE}, 
      #{updateTime,jdbcType=DATE}, #{createUserid,jdbcType=DECIMAL}, #{updateUserid,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.athena.module.roles.model.Role" >
    insert into T_ROLES
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="roleCode != null" >
        ROLE_CODE,
      </if>
      <if test="roleDescription != null" >
        ROLE_DESCRIPTION,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="createUserid != null" >
        CREATE_USERID,
      </if>
      <if test="updateUserid != null" >
        UPDATE_USERID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null" >
        #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="createUserid != null" >
        #{createUserid,jdbcType=DECIMAL},
      </if>
      <if test="updateUserid != null" >
        #{updateUserid,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.athena.module.roles.model.RoleExample" resultType="java.lang.Integer" >
    select count(*) from T_ROLES
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_ROLES
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.roleName != null" >
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleCode != null" >
        ROLE_CODE = #{record.roleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.roleDescription != null" >
        ROLE_DESCRIPTION = #{record.roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        IS_DEL = #{record.isDel,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.createUserid != null" >
        CREATE_USERID = #{record.createUserid,jdbcType=DECIMAL},
      </if>
      <if test="record.updateUserid != null" >
        UPDATE_USERID = #{record.updateUserid,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_ROLES
    set ID = #{record.id,jdbcType=DECIMAL},
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      ROLE_CODE = #{record.roleCode,jdbcType=VARCHAR},
      ROLE_DESCRIPTION = #{record.roleDescription,jdbcType=VARCHAR},
      IS_DEL = #{record.isDel,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      CREATE_USERID = #{record.createUserid,jdbcType=DECIMAL},
      UPDATE_USERID = #{record.updateUserid,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.athena.module.roles.model.Role" >
    update T_ROLES
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null" >
        ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=DATE},
      </if>
      <if test="createUserid != null" >
        CREATE_USERID = #{createUserid,jdbcType=DECIMAL},
      </if>
      <if test="updateUserid != null" >
        UPDATE_USERID = #{updateUserid,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.athena.module.roles.model.Role" >
    update T_ROLES
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR},
      IS_DEL = #{isDel,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      CREATE_USERID = #{createUserid,jdbcType=DECIMAL},
      UPDATE_USERID = #{updateUserid,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="pagination != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="pagination != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{pagination.beginIndex} and rownum_ <= #{pagination.endIndex} ]]>
    </if>
  </sql>
</mapper>